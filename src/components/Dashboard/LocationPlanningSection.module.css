/* Location Planning Section Styles - FIXED WITH PROPER ARMORA VARIABLES */
.container {
  margin: 1.5rem 0;
  padding: 1.5rem;
  /* Fixed: Use proper Armora background */
  background: var(--bg-card);
  /* Fixed: Use proper Armora gold */
  border: 2px solid var(--armora-gold);
  border-radius: 12px;
  width: calc(100vw - 36px);
  max-width: 680px;
  margin-left: auto;
  margin-right: auto;
  /* Add premium shadow effect */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 215, 0, 0.1);
}

.header {
  text-align: center;
  margin-bottom: 1.5rem;
}

.title {
  /* Fixed: Use proper Armora text color */
  color: var(--text-primary);
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
  line-height: 1.3;
}

.subtitle {
  /* Fixed: Use proper Armora gold */
  color: var(--armora-gold);
  font-size: 1rem;
  margin: 0;
  font-weight: 500;
}

.locationForm {
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
}

.inputGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  /* Add subtle background card for each input group */
  background: rgba(26, 26, 46, 0.4);
  border-radius: 12px;
  padding: 16px;
  border: 1px solid rgba(255, 215, 0, 0.15);
  transition: all 0.3s ease;
}

.inputGroup:hover {
  /* Highlight entire group on hover */
  background: rgba(26, 26, 46, 0.6);
  border-color: rgba(255, 215, 0, 0.25);
}

.label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  /* Fixed: Use proper Armora text color */
  color: var(--text-primary);
  font-weight: 600;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.icon {
  font-size: 1.2rem;
  /* Add golden glow to icons */
  color: var(--armora-gold);
  filter: drop-shadow(0 2px 4px rgba(255, 215, 0, 0.3));
}

.inputContainer {
  position: relative;
  display: flex;
}

.input {
  flex: 1;
  padding: 0.875rem 3rem 0.875rem 1rem;
  font-size: 1rem;
  /* FIXED: Use proper Armora background (was undefined var(--color-card-bg)) */
  background: var(--bg-secondary);
  /* FIXED: Use proper Armora gold border (was undefined var(--color-border)) */
  border: 2px solid rgba(255, 215, 0, 0.5);
  border-radius: 8px;
  /* FIXED: Use proper Armora text color (was undefined var(--color-text-light)) */
  color: var(--text-primary);
  transition: all 0.3s ease;
  min-height: 44px;
  box-sizing: border-box;
  /* Add premium styling */
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2), 0 2px 8px rgba(255, 215, 0, 0.1);
  cursor: pointer;
}

.input:focus {
  outline: none;
  /* FIXED: Use proper Armora gold (was undefined var(--color-gold)) */
  border-color: var(--armora-gold);
  /* Enhanced focus glow */
  box-shadow:
    0 0 0 4px rgba(255, 215, 0, 0.25),
    0 4px 16px rgba(255, 215, 0, 0.2),
    inset 0 1px 3px rgba(0, 0, 0, 0.1);
  /* Slightly lighter background on focus */
  background: var(--bg-card);
  transform: translateY(-1px);
}

.input::placeholder {
  /* FIXED: Use proper Armora text color (was undefined var(--color-text-muted)) */
  color: var(--text-secondary);
  font-style: normal;
  opacity: 0.8;
}

.input:hover:not(:focus):not(:disabled) {
  /* Clear hover state indication */
  border-color: rgba(255, 215, 0, 0.7);
  box-shadow:
    0 2px 12px rgba(255, 215, 0, 0.15),
    inset 0 1px 3px rgba(0, 0, 0, 0.15);
  /* Subtle background lightening on hover */
  background: var(--bg-card);
  transform: translateY(-0.5px);
}

.input:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.inputError {
  /* FIXED: Use proper Armora error color (was undefined var(--color-error)) */
  border-color: var(--error);
  background: rgba(255, 68, 68, 0.05);
  box-shadow:
    0 0 0 3px rgba(255, 68, 68, 0.2),
    0 4px 12px rgba(255, 68, 68, 0.15);
}

.currentLocationButton {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  /* FIXED: Use proper Armora gold (was undefined var(--color-gold)) */
  background: linear-gradient(135deg, var(--armora-gold), var(--hover-gold));
  border: 1px solid rgba(255, 215, 0, 0.8);
  border-radius: 6px;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1rem;
  color: var(--armora-dark);
  box-shadow: 0 2px 6px rgba(255, 215, 0, 0.3);
}

.currentLocationButton:hover:not(:disabled) {
  /* FIXED: Use proper Armora hover gold (was undefined var(--color-gold-hover)) */
  background: linear-gradient(135deg, var(--hover-gold), var(--armora-gold));
  transform: translateY(-50%) scale(1.05);
  box-shadow: 0 3px 10px rgba(255, 215, 0, 0.4);
}

.currentLocationButton:active:not(:disabled) {
  transform: translateY(-50%) scale(0.95);
}

.currentLocationButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.errorMessage {
  /* FIXED: Use proper Armora error color (was undefined var(--color-error)) */
  color: var(--error);
  font-size: 0.875rem;
  margin-top: 8px;
  display: flex;
  align-items: center;
  gap: 6px;
  background: rgba(255, 68, 68, 0.08);
  padding: 8px 12px;
  border-radius: 8px;
  border-left: 3px solid var(--error);
  animation: shake 0.3s ease-in-out;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

.estimateSection {
  margin-top: 1rem;
  padding: 1rem;
  background: rgba(255, 215, 0, 0.05);
  border: 1px solid rgba(255, 215, 0, 0.2);
  border-radius: 8px;
}

.estimateTitle {
  /* FIXED: Use proper Armora text color (was undefined var(--color-text-light)) */
  color: var(--text-primary);
  font-size: 1.1rem;
  font-weight: 600;
  margin: 0 0 0.75rem 0;
}

.calculatingIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem 0;
}

.estimateDetails {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.estimateItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.estimateLabel {
  color: var(--color-text-muted);
  font-size: 0.9rem;
}

.estimateValue {
  color: var(--color-text-light);
  font-weight: 500;
}

.estimatePrice {
  color: var(--color-gold);
  font-weight: 600;
  font-size: 1.1rem;
}

.estimateNote {
  color: var(--color-text-muted);
  font-size: 0.8rem;
  text-align: center;
  margin-top: 0.5rem;
  font-style: italic;
}

/* Mobile Optimizations */
@media (max-width: 768px) {
  .container {
    width: calc(100vw - 36px);
    margin: 1rem 0;
    padding: 1.25rem;
  }

  .title {
    font-size: 1.4rem;
  }

  .subtitle {
    font-size: 0.95rem;
  }

  .input {
    font-size: 1rem;
    padding: 1rem 3.5rem 1rem 1rem;
  }

  .currentLocationButton {
    width: 44px;
    height: 44px;
    font-size: 1.1rem;
  }

  .estimateItem {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
  }

  .estimateValue,
  .estimatePrice {
    align-self: flex-end;
  }
}

/* Small mobile devices */
@media (max-width: 480px) {
  .container {
    width: calc(100vw - 24px);
    margin: 0.75rem auto;
    padding: 1rem;
  }

  .title {
    font-size: 1.3rem;
  }

  .locationForm {
    gap: 1rem;
  }
}

/* High DPI displays */
@media (-webkit-min-device-pixel-ratio: 2) {
  .input {
    border-width: 1px;
  }

  .input:focus {
    border-width: 2px;
  }
}

/* Completed input state with visual feedback */
.inputCompleted {
  border-color: #FFD700 !important;
  background: rgba(76, 175, 80, 0.05);
  position: relative;
}

.inputCompleted::after {
  content: 'âœ“';
  position: absolute;
  right: 50px;
  top: 50%;
  transform: translateY(-50%);
  color: #FFD700;
  font-weight: bold;
  font-size: 1.2rem;
  pointer-events: none;
}

/* Proceed to Services Section */
.proceedSection {
  margin-top: 1.5rem;
  text-align: center;
  padding: 1rem;
  background: rgba(255, 215, 0, 0.08);
  border: 1px solid rgba(255, 215, 0, 0.3);
  border-radius: 12px;
  animation: slideInUp 0.4s ease-out;
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.proceedButton {
  background: linear-gradient(90deg, var(--armora-gold), #FFA500);
  color: var(--armora-dark);
  border: none;
  padding: 1rem 2rem;
  border-radius: 12px;
  font-size: 1.1rem;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  min-height: var(--touch-target);
  box-shadow: 0 4px 16px rgba(255, 215, 0, 0.3);
  animation: pulse 2s infinite;
  position: relative;
  overflow: hidden;
}

.proceedButton:hover:not(:disabled) {
  background: linear-gradient(90deg, #FFA500, var(--armora-gold));
  transform: translateY(-2px);
  box-shadow: 0 6px 24px rgba(255, 215, 0, 0.4);
  animation: none;
}

.proceedButton:active:not(:disabled) {
  transform: translateY(0);
}

.proceedButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  animation: none;
}

.proceedIcon {
  font-size: 1.2rem;
}

.proceedArrow {
  font-size: 1.2rem;
  transition: transform 0.3s ease;
}

.proceedButton:hover .proceedArrow {
  transform: translateX(4px);
}

.proceedHint {
  margin: 0.75rem 0 0 0;
  color: var(--text-muted);
  font-size: 0.85rem;
  font-style: italic;
}

@keyframes pulse {
  0% {
    box-shadow: 0 4px 16px rgba(255, 215, 0, 0.3);
  }
  50% {
    box-shadow: 0 4px 20px rgba(255, 215, 0, 0.5);
  }
  100% {
    box-shadow: 0 4px 16px rgba(255, 215, 0, 0.3);
  }
}

/* Mobile optimizations for proceed section */
@media (max-width: 768px) {
  .proceedButton {
    width: 100%;
    padding: 1.2rem 1.5rem;
    font-size: 1rem;
  }

  .proceedSection {
    margin-top: 1.25rem;
    padding: 1.25rem;
  }
}

@media (max-width: 480px) {
  .proceedButton {
    padding: 1rem;
    font-size: 0.95rem;
  }

  .proceedHint {
    font-size: 0.8rem;
  }
}