name: Dependency Compatibility Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  dependency-audit:
    name: Dependency Compatibility Audit
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Verify Node version
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          
          # Extract major version
          NODE_MAJOR=$(node --version | cut -d'.' -f1 | sed 's/v//')
          
          if [ "$NODE_MAJOR" -lt 20 ]; then
            echo "❌ Error: Node version must be 20 or higher"
            exit 1
          fi
          
          echo "✅ Node version check passed"
      
      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=true npm ci
        env:
          NODE_ENV: development
      
      - name: Check for peer dependency conflicts
        run: |
          echo "Checking for peer dependency issues..."
          npm ls react react-dom react-leaflet @types/react @types/react-dom || true
          
          if npm ls 2>&1 | grep -i "UNMET PEER DEPENDENCY"; then
            echo "❌ Unmet peer dependencies found"
            exit 1
          fi
          
          echo "✅ No peer dependency conflicts"
      
      - name: Verify React version compatibility
        run: |
          echo "Verifying React version compatibility..."
          
          # Check React version
          REACT_VERSION=$(npm list react --depth=0 --json | grep -o '"version": "[^"]*"' | head -1 | cut -d'"' -f4)
          echo "React version: $REACT_VERSION"
          
          # Check if React 19
          if [[ ! "$REACT_VERSION" =~ ^19\. ]]; then
            echo "⚠️ Warning: Expected React 19.x, got $REACT_VERSION"
          fi
          
          # Check react-leaflet version
          LEAFLET_VERSION=$(npm list react-leaflet --depth=0 --json | grep -o '"version": "[^"]*"' | head -1 | cut -d'"' -f4)
          echo "React Leaflet version: $LEAFLET_VERSION"
          
          # For React 19, react-leaflet should be 5.x
          if [[ "$REACT_VERSION" =~ ^19\. ]] && [[ ! "$LEAFLET_VERSION" =~ ^5\. ]]; then
            echo "❌ Error: React 19 requires react-leaflet 5.x, got $LEAFLET_VERSION"
            exit 1
          fi
          
          echo "✅ React version compatibility check passed"
      
      - name: Check for React compatibility errors in build
        run: |
          echo "Running build to check for React compatibility errors..."
          
          # Run build and capture output
          if npm run build 2>&1 | tee build-output.log; then
            echo "✅ Build completed"
          else
            echo "⚠️ Build had errors (checking if React-related)"
          fi
          
          # Check for React-specific compatibility errors
          if grep -E "cannot be used as a JSX component|'use' is not exported from 'react'|Unsupported engine" build-output.log; then
            echo "❌ React compatibility errors detected"
            exit 1
          fi
          
          echo "✅ No React compatibility errors found"
      
      - name: Run security audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=high || true
          echo "✅ Security audit completed"
      
      - name: Check for outdated dependencies
        run: |
          echo "Checking for outdated dependencies..."
          npm outdated || true
          echo "ℹ️ Outdated check completed"
      
      - name: Generate dependency report
        if: always()
        run: |
          echo "## 📦 Dependency Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment" >> $GITHUB_STEP_SUMMARY
          echo "- Node: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- NPM: $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Key Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npm list react react-dom react-leaflet @types/react @types/react-dom firebase 2>&1 | head -20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dependency compatibility check completed" >> $GITHUB_STEP_SUMMARY
