name: 🤖 Build Android App for Play Store

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: 33
  ANDROID_BUILD_TOOLS_VERSION: '33.0.0'

jobs:
  setup-capacitor:
    name: 📦 Setup Capacitor & Android Project
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: |
          npm ci
          npm install @capacitor/core @capacitor/cli @capacitor/android
      
      - name: 🔧 Initialize Capacitor (if not exists)
        run: |
          if [ ! -f "capacitor.config.ts" ] && [ ! -f "capacitor.config.json" ]; then
            echo "Creating Capacitor config..."
            npx cap init "Armora Security Transport" "uk.co.armora.client" --web-dir=build
          else
            echo "Capacitor config already exists"
          fi
      
      - name: 🏗️ Build React app
        run: npm run build
        env:
          CI: false
          REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
          REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_STRIPE_PUBLISHABLE_KEY: ${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}
          REACT_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
      
      - name: 📱 Add Android platform (if not exists)
        run: |
          if [ ! -d "android" ]; then
            echo "Adding Android platform..."
            npx cap add android
          else
            echo "Android platform already exists, syncing..."
            npx cap sync android
          fi
      
      - name: 📤 Upload Android project
        uses: actions/upload-artifact@v4
        with:
          name: android-project
          path: android/
          retention-days: 7

  build-android-debug:
    name: 🔨 Build Android Debug APK
    needs: setup-capacitor
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: ☕ Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: 📥 Download Android project
        uses: actions/download-artifact@v4
        with:
          name: android-project
          path: android/
      
      - name: 🔧 Make gradlew executable
        run: chmod +x android/gradlew
      
      - name: 🏗️ Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace
      
      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: armora-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 30

  build-android-release:
    name: 🚀 Build Android Release AAB
    needs: setup-capacitor
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: ☕ Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: 📥 Download Android project
        uses: actions/download-artifact@v4
        with:
          name: android-project
          path: android/
      
      - name: 🔧 Make gradlew executable
        run: chmod +x android/gradlew
      
      - name: 🏗️ Build Release AAB
        run: |
          cd android
          ./gradlew bundleRelease --stacktrace
      
      - name: 📤 Upload Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: armora-release-aab
          path: android/app/build/outputs/bundle/release/*.aab
          retention-days: 90
      
      - name: 📊 Generate build report
        run: |
          echo "## 🎉 Android Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 Build Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- **Debug APK**: armora-debug-apk" >> $GITHUB_STEP_SUMMARY
          echo "- **Release AAB**: armora-release-aab" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Ready for Google Play Store!" >> $GITHUB_STEP_SUMMARY
