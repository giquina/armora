name: ü§ñ Build Android App for Play Store

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: 33
  ANDROID_BUILD_TOOLS_VERSION: '33.0.0'

jobs:
  setup-capacitor:
    name: üì¶ Setup Capacitor & Android Project
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: üì¶ Install dependencies
        run: |
          npm ci
          npm install @capacitor/core @capacitor/cli @capacitor/android
      
      - name: üîß Initialize Capacitor (if not exists)
        run: |
          if [ ! -f "capacitor.config.ts" ] && [ ! -f "capacitor.config.json" ]; then
            echo "Creating Capacitor config..."
            npx cap init "Armora Security Transport" "uk.co.armora.client" --web-dir=build
          else
            echo "Capacitor config already exists"
          fi
      
      - name: üèóÔ∏è Build React app
        run: npm run build
        env:
          CI: false
          REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
          REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_STRIPE_PUBLISHABLE_KEY: ${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}
          REACT_APP_GOOGLE_MAPS_API_KEY: ${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
      
      - name: üì± Add Android platform (if not exists)
        run: |
          if [ ! -d "android" ]; then
            echo "Adding Android platform..."
            npx cap add android
          else
            echo "Android platform already exists, syncing..."
            npx cap sync android
          fi
      
      - name: üì§ Upload Android project
        uses: actions/upload-artifact@v4
        with:
          name: android-project
          path: android/
          retention-days: 7

  build-android-debug:
    name: üî® Build Android Debug APK
    needs: setup-capacitor
    runs-on: ubuntu-latest
    if: github.event.inputs.build_type == 'debug' || github.event.inputs.build_type == ''
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: ‚òï Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: üì• Download Android project
        uses: actions/download-artifact@v4
        with:
          name: android-project
          path: android/
      
      - name: üîß Make gradlew executable
        run: chmod +x android/gradlew
      
      - name: üèóÔ∏è Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --stacktrace
      
      - name: üì§ Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: armora-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 30
      
      - name: üìù Comment on PR with download link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ Android Debug APK built successfully!\n\nDownload it from the artifacts section of this workflow run.'
            })

  build-android-release:
    name: üöÄ Build Android Release AAB for Play Store
    needs: setup-capacitor
    runs-on: ubuntu-latest
    if: github.event.inputs.build_type == 'release' || github.ref == 'refs/heads/main'
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: ‚òï Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: üì• Download Android project
        uses: actions/download-artifact@v4
        with:
          name: android-project
          path: android/
      
      - name: üîß Make gradlew executable
        run: chmod +x android/gradlew
      
      - name: üîê Decode keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/armora-release.keystore
      
      - name: üèóÔ∏è Build Release AAB
        run: |
          cd android
          if [ -f "app/armora-release.keystore" ]; then
            echo "Building signed release AAB..."
            ./gradlew bundleRelease \
              -Pandroid.injected.signing.store.file=app/armora-release.keystore \
              -Pandroid.injected.signing.store.password="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
              -Pandroid.injected.signing.key.alias="${{ secrets.ANDROID_KEY_ALIAS }}" \
              -Pandroid.injected.signing.key.password="${{ secrets.ANDROID_KEY_PASSWORD }}" \
              --stacktrace
          else
            echo "Building unsigned release AAB (keystore not configured)..."
            ./gradlew bundleRelease --stacktrace
          fi
      
      - name: üì§ Upload Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: armora-release-aab
          path: android/app/build/outputs/bundle/release/*.aab
          retention-days: 90
      
      - name: üìä Generate build report
        run: |
          echo "## üéâ Android Release Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì± Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type:** Release AAB" >> $GITHUB_STEP_SUMMARY
          echo "- **Target API:** ${{ env.ANDROID_API_LEVEL }}" >> $GITHUB_STEP_SUMMARY
          echo "- **JDK Version:** ${{ env.JAVA_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the AAB from artifacts" >> $GITHUB_STEP_SUMMARY
          echo "2. Upload to Google Play Console" >> $GITHUB_STEP_SUMMARY
          echo "3. Create a release in Play Console" >> $GITHUB_STEP_SUMMARY
          echo "4. Submit for review" >> $GITHUB_STEP_SUMMARY

  create-github-issue:
    name: üìù Create tracking issue
    needs: [build-android-debug, build-android-release]
    runs-on: ubuntu-latest
    if: always() && (needs.build-android-debug.result == 'success' || needs.build-android-release.result == 'success')
    
    steps:
      - name: üìù Create issue with build summary
        uses: actions/github-script@v7
        with:
          script: |
            const buildType = context.payload.inputs?.build_type || 'auto';
            const sha = context.sha.substring(0, 7);
            
            const issueBody = `## ü§ñ Android Build Complete
            
            ### Build Information
            - **Build Type:** ${buildType}
            - **Commit:** ${sha}
            - **Workflow Run:** [View workflow](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
            
            ### Artifacts
            The following artifacts were generated:
            - Debug APK (if built)
            - Release AAB (if built)
            
            ### Next Steps for Play Store Submission
            - [ ] Download the release AAB
            - [ ] Test the app on physical devices
            - [ ] Prepare Play Store assets (screenshots, descriptions)
            - [ ] Upload to Google Play Console
            - [ ] Complete Data Safety form
            - [ ] Submit for review
            
            ---
            ü§ñ This issue was automatically created by GitHub Actions`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üì± Android Build Ready - ${buildType} - ${sha}`,
              body: issueBody,
              labels: ['android', 'automation', 'play-store']
            });
